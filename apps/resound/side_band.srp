# Project Author: Roger B. Dannenberg
# Date: June 7, 2023


class The_side_band (Movement):
# Instance variables
    var mod_freq
    var sin1
    var mult1
    var fan1


    def init(window, x, y):
    # Initialization of instance variables
        super.init("V", 2)
        win = window // Main UI window

        setup_ui(x, y)
        mod_freq = freq_slide.value()


    def setup_ui(x, y):
    # Setting up Movement1's UI
        Checkbox(win, "V. The Side Band", x + 5, y + 5, 
                 300, 'H', 'mod_check') // checkbox doubling as title
        mod_check.add_target_method(this, 'mod_handler')

        // Sliders
        Labeled_slider(win, "hz", 'S', 'D', 250, 30, 25, 20, 1000, 
                       392.0, 'linear', 'freq_slide', prefs = prefs)
        freq_slide.add_target_method(this, 'freq_handler')


    def mod_handler(obj, event, x, y)
        if x:
            // signatures: mult(x, y, [chans]); sine(freq, amp, [chans])
            // we want only the left channel (trumpet) input, so use 1 chan:
            mult1 = mult(input_ugen, sine(mod_freq, 1))
            // but we want the mono result to appear on both output chans,
            // so use fanout:
            fan1 = fanout(mult1, 2)
            fan1.play()
        else:
            fan1.mute()
            fan1 = nil 
            mult1 = nil
            sin1 = nil


    def freq_handler(obj, x)
        mod_freq = x
        if sin1:
            sin1.set('freq', x)


    // def enable_real():
    //     mod_check.set_and_act(true)


    def disable_real():
        mod_check.set_and_act(false)

    def state_change():
        if state == 1:
            mod_check.set_and_act(true)
