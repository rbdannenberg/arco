# Project Author: Roger B. Dannenberg
# Date: June 7, 2023


class Shift_delay_bank:
# Creates a shift delay bank
    var shift_objs, delay_objs // pitch-shift and delay objects

    def init(length):
        shift_objs = array(5)
        delay_objs = array(5)
        for i = 0 to length-1:
            shift_objs[i] = ola_pitch_shift(input_ugen, 1, 0.01, 0.05)
            delay_objs[i] = delay(input_ugen, 1.0, 0.1, 2.0, 2)

    def set_delay(i, delay_value):
    # Sets the delay of the ith delay objects
        delay_objs[i].set('dur', delay_value)


    
class Hall_of_mirrors:
# Instance variables
    var win, init_x, init_y // GUI params
    var mixer // audio mixer
    var shift_delay_bank
    

    def init(window, x, y):
    # Initialization of instance variables
        win = window // Main UI window
        init_x = x // Starting x coord of movement
        init_y = y // Starting y coord of movement
        

        // Create shift delay bank
        shift_delay_bank = Shift_delay_bank(6)
        
        // Setup UI
        this.set_ui()

    def set_ui():
    # Setting up Movement's UI
        // Create Radiobox
        Radiobox(win, "II. Hall of Mirrors",
                ["off", "1", "2", "3", "4", "5"], init_x+300, init_y+5,
                125, 225, 'hallmirror')
        hallmirror.add_target_method(this, 'sd_hit')
    
    def get_control():
    # Returns the currently selected control
    # in the Radiobox
        return symbol_value(hallmirror).value()

    def sd_hit(obj, event, x, y):
    # Shift delay hit events
        display "Current control", get_control()
        if get_control() == 1:
            set_shift_delay(0.5, [2])

    def set_shift_delay(delay, shift_arr):
    # Sets up the delay and shift values of 
    # in the shift-delay bank

        for i = 0 to len(shift_arr):
            if delay == nil:
                continue
            else:
                shift_delay_bank.set_delay(i, (i+1)*delay) // Do I include latency? Confirm!!

                






