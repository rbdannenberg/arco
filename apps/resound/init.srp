# Project Author: Roger B. Dannenberg
# Date: June 7, 2023

require "debug"
require "wxserpent"
require "prob"
require "arco"
require "allugens"
require "slider"
require "reverb"
require "four_of_a_kind"
require "hall_of_mirrors"
require "o_for_a_thousand"
require "the_bell_tower"
require "side_band"
require "ripples_in_time"
require "someone_is_following_you"


# Definition of Global Variables
default_window.set_size(1000, 1000) // set size of default window
ui_initialized = false # boolean that denotes if ui has been initialized

def arco_ready():
    # called when arco is initialized and ready to make sound or when
    # arco audio stream has been reopened

    print "**** arco audio is running! ****"
    var default_win = default_window
    if ui_initialized:
        return

    # Setup latency slider
    var COL1 = 10
    var COL2 = 275
    var COL3 = 575
    Labeled_slider(default_win, "Latency", COL3, 5, 350, 28, 80,
                   0, 200, 50, 'integer', 'latency_slider', prefs = prefs)
    latency_slider.add_target_method(nil, 'resound_latency_handler')
    resound_latency = latency_slider.value() * 0.001

    # four_of_a_kind.srp initialization
    Four_of_a_kind(default_win, COL1, 10)

    # hall_of_mirrors.srp initialization
    Hall_of_mirrors(default_win, COL1, 180)

    # o_for_a_thousand.srp initialization
    O_for_a_thousand(default_win, COL1, 390)

    # the_bell_tower.srp initialization
    The_bell_tower(default_win, COL2, 10)

    # side_band.srp initialization 
    The_side_band(default_win, COL3, 40)

    # ripples_in_time initialization
    Ripples_in_time(default_win, COL3, 130)

    # someone_is_following_you.srp initialization
    Someone_is_following_you(default_win, COL3, 455)

    ui_initialized = true
    default_window.fit_to_children()
  

def resound_latency_handler(obj, val):
    prefs.set('latency', val)
    val = val * 0.001
    resound_latency = val



########## Main Initialization ################

def main():
    // o2_debug_flags("Ss") // ("SsBl")  -- see audiodev.srp and File menu
    arco_init(latency = 10, network = false, title = "Resound", appname = "resound")
    arco_run()
    sched_select(rtsched)
    display "####### main.srp GETTING File MENU FROM", default_window
    var file_menu = default_window.get_menu("File")
    file_menu.item("Print Ugen Info", "print Ugen tree and table",
                   nil, nil, 'arco_prugens_handler')
    file_menu.item("Arco Ugen GC Info", "print info about Ugen IDs",
                   nil, nil, 'arco_ugen_gc_info_handler')


main()

    

