# sine.srp - constructor implementation
#
# (machine generated by u2f.py)

def sine(freq, amp, optional chans):
    if not chans:
        chans = max_chans(max_chans(1, freq), amp)
    Ugen(create_ugen_id(), "sine", chans, 'a', "UU", 'freq', freq, 'amp', amp)

def sineb(freq, amp, optional chans):
    if not isnumber(freq) and freq.rate != 'b':
        print "ERROR: 'freq' input to Ugen 'sineb' must be block rate"
        return nil
    if not isnumber(amp) and amp.rate != 'b':
        print "ERROR: 'amp' input to Ugen 'sineb' must be block rate"
        return nil
    if not chans:
        chans = max_chans(max_chans(1, freq), amp)
    Ugen(create_ugen_id(), "sineb", chans, 'b', "UU", 'freq', freq, 'amp', amp)

