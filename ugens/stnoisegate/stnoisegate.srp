# stnoisegate.srp - constructor implementation
#
# (machine generated by u2f.py)

def stnoisegate(input, threshold, attack, hold, release):
    if input.rate != 'a':
        print "ERROR: 'input' input to Ugen 'stnoisegate' must be audio rate"
        return nil
    if not isnumber(threshold) and threshold.rate == 'a':
        print "ERROR: 'threshold' input to Ugen 'stnoisegate' must be block rate"
        return nil
    if not isnumber(attack) and attack.rate == 'a':
        print "ERROR: 'attack' input to Ugen 'stnoisegate' must be block rate"
        return nil
    if not isnumber(hold) and hold.rate == 'a':
        print "ERROR: 'hold' input to Ugen 'stnoisegate' must be block rate"
        return nil
    if not isnumber(release) and release.rate == 'a':
        print "ERROR: 'release' input to Ugen 'stnoisegate' must be block rate"
        return nil
    if input.chans != 1 and input.chans != 2:
        print "ERROR: 'input' input to Ugen 'stnoisegate' must have 1 or 2 channels"
        return nil
    if not isnumber(threshold) and threshold.chans != 1:
        print "ERROR: 'threshold' input to Ugen '{c}' must be single channel"
        return nil
    if not isnumber(attack) and attack.chans != 1:
        print "ERROR: 'attack' input to Ugen '{c}' must be single channel"
        return nil
    if not isnumber(hold) and hold.chans != 1:
        print "ERROR: 'hold' input to Ugen '{c}' must be single channel"
        return nil
    if not isnumber(release) and release.chans != 1:
        print "ERROR: 'release' input to Ugen '{c}' must be single channel"
        return nil

    Ugen(create_ugen_id(), "stnoisegate", 2, 'a', "UUUUU", omit_chans = true,
         'input', input, 'threshold', threshold, 'attack', attack, 'hold', hold,
         'release', release)

