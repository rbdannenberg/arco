# granstream.srp -- granular synthesis from input stream unit generator
#
# Roger B. Dannenberg
# June 2023

class Granstream (Ugen):
    def init(chans, input, polyphony, dur, enable):
        super.init(create_ugen_id(), "Granstream", chans, 'a', "UifB",
	           'input', input, 'polyphony', polyphony, 'dur', dur,
                   'enable', enable)

    def set_polyphony(p):
        o2_send_cmd("/arco/granstream/polyphony", 0, "Uf", id, p)

    def set_ratio(low, high)
        o2_send_cmd("/arco/granstream/ratio", 0, "Uff", id, low, high)

    def set_graindur(lowdur, highdur)
        o2_send_cmd("/arco/granstream/graindur", 0, "Uff", id, lowdur, highdur)

    def set_density(density)
        o2_send_cmd("/arco/granstream/density", 0, "Uf", id, density)

    def set_env(attack, release)
        o2_send_cmd("/arco/granstream/env", 0, "Uff", id, attack, release)
    
    def set_enable(enable)
        o2_send_cmd("/arco/granstream/enable", 0, "UB", id, enable)
        


def granstream(input, polyphony, dur, enable, optional chans = 1):
    Granstream(chans, input, polyphony, dur, enable)  # granstream as a function


