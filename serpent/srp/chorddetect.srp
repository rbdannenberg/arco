def chorddetect(reply_addr, frame_size, sample_rate):
    return Chorddetect(reply_addr, frame_size, sample_rate)


class Chorddetect (Ugen):
    def init(reply_addr, frame_size, sample_rate)
        super.init(create_ugen_id(), "Chorddetect", 0, '', "sii",
                   'reply_addr', reply_addr, 'frame_size', frame_size, 'sample_rate', sample_rate)

    def start(reply_addr):
        o2_send_cmd("/arco/chorddetect/start", 0, "Us", id, reply_addr)
        this

    def set(input, value):  // patterned after Ugen.set()
        // Note that the only thing you can set is 'input'
        inputs['input'] = value
        display "Chorddetect set", id, value.id
        o2_send_cmd("/arco/chorddetect/repl_input", 0, "UU", id, value.id)
        this

